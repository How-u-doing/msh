Test SIMPLE1: passed
Test SIMPLE2: passed
Test SIMPLE3: passed
Test SIMPLE4: passed
Test SIMPLE5: passed
Test BG1: FAILED in 10.205 sec
    Checking for background commands run
    Command  `cp fBG1a.txt fBG1b.txt &`
    Output   `Copied`
  timeout after 10.00s
Test BG2: FAILED in 0.250 sec
    Checking for background command is not waited for
    Command  `sleep 2 &`
    Expected `1`
    Got      ``
    sanitizer reports errors:
      =================================================================
      ==1064644==ERROR: LeakSanitizer: detected memory leaks

      Direct leak of 128 byte(s) in 1 object(s) allocated from:
          #0 0x7f1ff3c9c5a7 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cpp:99
          #1 0x55cf006379b1 in parse_line(char const*) /home/mark/github/msh/pset5/msh.cc:385

      Indirect leak of 112 byte(s) in 1 object(s) allocated from:
          #0 0x7f1ff3c9c5a7 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cpp:99
          #1 0x55cf00636cc0 in parse_line(char const*) /home/mark/github/msh/pset5/msh.cc:287

      SUMMARY: AddressSanitizer: 240 byte(s) leaked in 2 allocation(s).
      1
Test BG3: FAILED in 10.205 sec
    Checking for background command is not waited for
    Command  `sh -c "sleep 0.2; test -r fBG3b.txt && rm -f fBG3a.txt" &`
    Expected `Still here`
    Got      ``
  timeout after 10.00s
    sanitizer reports errors:
      =================================================================
      ==1064655==ERROR: AddressSanitizer: heap-use-after-free on address 0x604000000138 at pc 0x5625dea8402d bp 0x7ffd5fd44560 sp 0x7ffd5fd44550
      READ of size 8 at 0x604000000138 thread T0
      cat: fBG3a.txt: No such file or directory
Test LIST1: passed
Test LIST2: passed
Test LIST3: passed
Test LIST4: passed
Test LIST5: passed
Test LIST6: FAILED in 10.205 sec
    Checking for all commands in semicolon list run
    Command  `../msh -q cmdLIST6.sh &`
    Expected `Hello 1`
    Got      `Hello`
  timeout after 10.00s
    sanitizer reports errors:
      =================================================================
      ==1064840==ERROR: AddressSanitizer: heap-use-after-free on address 0x604000000078 at pc 0x55ded743302d bp 0x7ffd3937da60 sp 0x7ffd3937da50
      READ of size 8 at 0x604000000078 thread T0
      1
Test LIST7: FAILED in 0.247 sec
    Checking for semicolon/background precedence
    Command  `../msh -q cmdLIST7.sh`
    Expected `Hello Bye 1`
    Got      `Hello Bye`
    sanitizer reports errors:
      =================================================================
      ==1064922==ERROR: LeakSanitizer: detected memory leaks

      Direct leak of 128 byte(s) in 1 object(s) allocated from:
          #0 0x7fb9f60415a7 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cpp:99
          #1 0x5653164f1c41 in parse_line(char const*) /home/mark/github/msh/pset5/msh.cc:402

      Indirect leak of 112 byte(s) in 1 object(s) allocated from:
          #0 0x7fb9f60415a7 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cpp:99
          #1 0x5653164f0cc0 in parse_line(char const*) /home/mark/github/msh/pset5/msh.cc:287

      Indirect leak of 64 byte(s) in 1 object(s) allocated from:
          #0 0x7fb9f60415a7 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cpp:99
          #1 0x5653165049e7 in __gnu_cxx::new_allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::allocate(unsigned long, void const*) /usr/include/c++/11/ext/new_allocator.h:121
          #2 0x5653165049e7 in std::allocator_traits<std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::allocate(std::allocator<std::__c...
Test LIST8: passed
Test LIST9: FAILED in 10.205 sec
    Checking for second background does not wait
    Command  `sleep 0.2 & sleep 0.2 & echo OK`
    Output   `OK`
    Should have completed in 0.100 sec
  timeout after 10.00s
    sanitizer reports errors:
      =================================================================
      ==1064942==ERROR: AddressSanitizer: heap-use-after-free on address 0x604000000078 at pc 0x55847e7da02d bp 0x7ffe207e9620 sp 0x7ffe207e9610
      READ of size 8 at 0x604000000078 thread T0
Test COND1: passed
Test COND2: passed
Test COND3: passed
Test COND4: passed
Test COND5: passed
Test COND6: passed
Test COND7: passed
Test COND8: passed
Test COND9: passed
Test COND10: passed
Test COND11: passed
Test COND12: FAILED in 0.330 sec
    Checking for conditional chains and background
    Command  `sleep 0.2 && echo Second & sleep 0.1 && echo First`
    Expected `First Second`
    Got      `Second First`
Test COND13: FAILED in 0.286 sec
    Checking for more conditionals with background
    Command  `echo first && sleep 0.1 && echo third & sleep 0.05 ; echo second ; sleep 0.1 ; echo fourth`
    Expected `first second third fourth`
    Got      `first third second fourth`
Test COND14: FAILED in 0.026 sec
    Checking for non-exit status and ||
    Command  `../build/timeout.sh 0.02 sleep 10 || echo yes`
    Expected `yes`
    Got      `execvp: Permission denied yes`
Test COND15: FAILED in 0.026 sec
    Checking for non-exit status and &&
    Command  `../build/timeout.sh 0.02 sleep 10 && echo no`
    Expected ``
    Got      `execvp: Permission denied`
Test PIPE1: passed
Test PIPE2: passed
Test PIPE3: passed
Test PIPE4: passed
Test PIPE5: passed
Test PIPE6: passed
Test PIPE7: passed
Test PIPE8: passed
Test PIPE9: passed
Test PIPE10: passed
Test PIPE11: passed
Test PIPE12: FAILED in 0.273 sec
    Checking for pipelines, background, semicolons
    Command  `../msh -q cmdPIPE12.sh; ps t /dev/pts/1 | grep -m1 "slee*p" | wc -l`
    Expected `Hello Bye 1`
    Got      `Hello Bye`
    sanitizer reports errors:
      =================================================================
      ==1065240==ERROR: LeakSanitizer: detected memory leaks

      Direct leak of 128 byte(s) in 1 object(s) allocated from:
          #0 0x7f61bd10b5a7 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cpp:99
          #1 0x5566a6922c41 in parse_line(char const*) /home/mark/github/msh/pset5/msh.cc:402

      Indirect leak of 112 byte(s) in 1 object(s) allocated from:
          #0 0x7f61bd10b5a7 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cpp:99
          #1 0x5566a6921cc0 in parse_line(char const*) /home/mark/github/msh/pset5/msh.cc:287

      Indirect leak of 64 byte(s) in 1 object(s) allocated from:
          #0 0x7f61bd10b5a7 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cpp:99
          #1 0x5566a69359e7 in __gnu_cxx::new_allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::allocate(unsigned long, void const*) /usr/include/c++/11/ext/new_allocator.h:121
          #2 0x5566a69359e7 in std::allocator_traits<std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::allocate(std::allocator<std::__c...
Test PIPE13: passed
    sanitizer reports errors:
      =================================================================
      ==1065252==ERROR: LeakSanitizer: detected memory leaks

      Direct leak of 128 byte(s) in 1 object(s) allocated from:
          #0 0x7f78d36125a7 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cpp:99
          #1 0x55cb874399b1 in parse_line(char const*) /home/mark/github/msh/pset5/msh.cc:385

      Indirect leak of 112 byte(s) in 1 object(s) allocated from:
          #0 0x7f78d36125a7 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cpp:99
          #1 0x55cb87438cc0 in parse_line(char const*) /home/mark/github/msh/pset5/msh.cc:287

      Indirect leak of 64 byte(s) in 1 object(s) allocated from:
          #0 0x7f78d36125a7 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cpp:99
          #1 0x55cb8744c9e7 in __gnu_cxx::new_allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::allocate(unsigned long, void const*) /usr/include/c++/11/ext/new_allocator.h:121
          #2 0x55cb8744c9e7 in std::allocator_traits<std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::allocate(std::allocator<std::__c...
Test PIPE14: FAILED in 2.101 sec
    Checking for pipelines, background
    Command  `../msh -q cmdPIPE14.sh &`
    Expected `Hello 1`
    Got      `Hello`
  timeout after 2.00s
    sanitizer reports errors:
      =================================================================
      ==1065264==ERROR: AddressSanitizer: heap-use-after-free on address 0x604000000078 at pc 0x55fb2a1ad02d bp 0x7ffebfca69a0 sp 0x7ffebfca6990
      READ of size 8 at 0x604000000078 thread T0
      1
Test PIPE15: passed
Test PIPE16: passed
Test PIPE17: passed
Test PIPE18: passed
Test PIPE19: passed
Test PIPE20: passed
Test PIPE21: passed
Test PIPE22: passed
Test PIPE23: passed
Test PIPE24: FAILED in 10.207 sec
    Checking for pipeline and background
    Command  `sleep 0.2 | wc -c | sed s/0/Second/ & sleep 0.1 | wc -c | sed s/0/First/`
    Output   `First Second`
  timeout after 10.00s
    sanitizer reports errors:
      =================================================================
      ==1065431==ERROR: AddressSanitizer: heap-use-after-free on address 0x6040000000f8 at pc 0x55f7c45a202d bp 0x7ffdc9f28ea0 sp 0x7ffdc9f28e90
      READ of size 8 at 0x6040000000f8 thread T0
Test ZOMBIE1: passed
Test ZOMBIE2: passed
Test REDIR1: passed
Test REDIR2: passed
Test REDIR3: passed
Test REDIR4: passed
Test REDIR5: passed
Test REDIR6: passed
Test REDIR7: passed
Test REDIR8: passed
Test REDIR9: passed
Test REDIR10: passed
Test REDIR11: passed
Test REDIR12: passed
Test REDIR13: passed
Test REDIR14: passed
Test REDIR15: passed
Test REDIR16: passed
Test REDIR17: passed
Test REDIR18: passed
Test CD1: passed
Test CD2: passed
Test CD3: passed
Test CD4: passed
Test CD5: passed
Test CD6: passed
Test CD7: passed
Test CD8: passed
Test INTR1: passed
Test INTR2: passed
Test INTR3: passed
Test INTR4: passed
Test INTR5: FAILED in 0.332 sec
    Checking for interrupt not stopping background
    Command  `sleep 0.2 && echo yes & sleep 0.1 && echo no`
    Expected `yes`
    Got      `[32mmark@ubuntu[0m:[34m~/github/msh/pset5/out[0m% 1065771 yes no`
75 of 89 tests passed
